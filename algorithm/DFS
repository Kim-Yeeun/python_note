
#----------------------------------------------------------------------------------------------------------------
# DFS(깊이 우선 탐색)
# 스택 자료구조 또는 재귀함수 이용
# 1. 탐색 시작 노드를 스택에 삽입하고 방문 처리
# 2. 스택의 최상단 노드에 방문하지 않은 인접한 노드가 하나라도 있으면 그 노드를 스택에 넣고 방문 처리
# 3. 방문하지 않은 인접 노드가 없으면 스택에서 최상단 노드를 꺼낸다.
# 4. 3-4번의 과정을 수행할 수 없을 때까지 반복

# 기본 예제
def dfs(graph, v, visited):
  visited[v] = True # 현재 노드를 방문 처리
  print(v, end=' ')
 
  for i in graph[v]: # 현재 노드와 인접한 다른 노드를 재귀적으로 방문
    if not visited[i]:
      dfs(graph, i, visited)

graph = [ # 그래프의 노드가 연결된 정보, 0번 노드는 비우고 1~8번의 노드 정보
  [],
  [2, 3, 8],
  [1, 7],
  [1, 4, 5],
  [3, 5],
  [3, 4],
  [7],
  [2, 6, 8],
  [1, 7]
]

visited = [False] * 9 # 각 노드의 방문 정보

dfs(graph, 1, visited) # 1 2 7 6 8 3 4 5


