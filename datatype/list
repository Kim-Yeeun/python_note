
#----------------------------------------------------
# 리스트의 초기화 및 선언

a = [1, 2, 3, 4, 5]

print(a) # [1, 2, 3, 4, 5]
print(a[3]) # 4

n = 10
b = [0] * n

print(b) # [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

#----------------------------------------------------
# 리스트의 인덱싱

a = [1, 2, 3, 4, 5, 6, 7, 8, 9]

print(a[3]) # 4
print(a[-1]) # 9
print(a[-6]) # 4

#----------------------------------------------------
# 리스트의 슬라이싱

a = [1, 2, 3, 4, 5, 6, 7, 8, 9]

print(a[1:3]) # [2, 3] 2번째 원소부터 3번째 원소까지 슬라이싱

#----------------------------------------------------
# 리스트 컴프리헨션

a = [i for i in range(10)] # 반복문을 사용

print(a) # [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]

b = [i for i in range(10) if i % 2 == 1] # 조건도 붙일 수 있다.

print(b) # [1, 3, 5, 7, 9]

c = [i * i for i in range(10)]

print(c) # [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]

n = 3
m = 4
array = [[0] * m for _ in range(n)]

print(array) # [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

#----------------------------------------------------
# 리스트 메서드

a = [1, 3, 2, 4, 5]

a.sort()
print(a) # [1, 2, 3, 4, 5]

a.sort(reverse = True)
print(a) # [5, 4, 3, 2, 1]

b = [1, 3, 2, 4, 5]

b.reverse()
print(b) # [5, 4, 2, 3, 1]

b.insert(3, 3)
print(b) # [5, 4, 2, 3, 3, 1]

print(b.count(3)) # 2

b.remove(3)
print(b) # [5, 4, 2, 3, 1]

# 다수의 특정 원소 
a = [1, 2, 3, 4, 5, 5, 5]
n = {3, 5}

result = [i for i in a if i not in n]
print(result) # [1, 2, 4]

#----------------------------------------------------
# 바둑판 표현하기 문제
# 이차원 리스트를 사용하여 바둑판에 흰돌의 위치를 나타낸다.

l = []
for i in range(20): # 0으로 채워진 이차원 리스트 생성
  l.append([])
  for j in range(20):
    l[i].append(0)

n = int(input())

for i in range(n):
  x, y = map(int, input().split())
  l[x][y] = 1

for i in range(1, 20):
  for j in range(1, 20):
    print(l[i][j], end=' ')
  print()


