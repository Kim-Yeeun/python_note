
from collections import deque

def bfs(graph, x, y):
  dx = [0, 0, 1, -1, 1, 1, -1, -1]
  dy = [1, -1, 0, 0, -1, 1, 1, -1]
  queue = deque([(x, y)])
  graph[x][y] = 0
  while queue:
    x, y = queue.popleft()
    for i in range(8):
      nx = x + dx[i]
      ny = y + dy[i]
      if nx < 0 or nx >= h or ny < 0 or ny >= w:
        continue
      if graph[nx][ny] == 1:
        queue.append((nx, ny))
        graph[nx][ny] = 0
  return

results = []
while True:
  w, h = map(int, input().split())
  if w == 0 and h == 0:
    break
    
  graph = []
  for _ in range(h): # 행 열 반전되어 입력됨
    graph.append(list(map(int, input().split())))

  result = 0
  for i in range(h):
    for j in range(w):
      if graph[i][j] == 1:
        bfs(graph, i, j)
        result += 1
  results.append(result)

for i in results:
  print(i)
  
  
