
import sys
input = sys.stdin.readline

from collections import deque

def bfs(start, result):
  queue = deque([start])
  visited[start] = True
  while queue:
    v = queue.popleft()
    for i in graph[v]: # v : 부모 노드 번호 , i : 자식 노드 번호
      if not visited[i]:
        queue.append(i)
        visited[i] = True
        result[i] = v
  return result

n = int(input())

graph = [[] for _ in range(n+1)]
for _ in range(n-1):
  x, y = map(int, input().split())
  graph[x].append(y)
  graph[y].append(x)

visited = [False] * (n+1)

result = [[] for _ in range(n+1)] # 부모 노드 정보 담을 리스트

bfs(1, result)

for i in range(2, n+1):
  print(result[i])
  
  
