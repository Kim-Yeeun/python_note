
#----------------------------------------------------------------------------------------------------------------
# BFS(너비 우선 탐색)
# 큐 자료구조 이용
# 1. 탐색 시작 노드를 큐에 삽입하고 방문 처리
# 2. 큐에서 노드를 꺼낸 후 해당 노드의 인접 노드 중에서 방문하지 않은 노드를 모두 큐에 삽입하고 방문 처리
# 3. 2번 과정을 수행할 수 없을 때까지 반복

from collections import deque

def bfs(graph, start, visited):
  queue = deque([start])
  visited[start] = True # 현재 노드를 방문 처리
  while queue: # 큐가 빌 때까지 반복
    v = queue.popleft() # 큐에서 하나의 원소를 뽑아 출력
    print(v, end=' ')

    for i in graph[v]: # 방문하지 않은 인접 원소들을 큐에 삽입
      if not visited[i]:
        queue.append(i)
        visited[i] = True
        
graph = [ # 그래프의 노드가 연결된 정보
  [],
  [2, 3, 8],
  [1, 7],
  [1, 4, 5],
  [3, 5],
  [3, 4],
  [7],
  [2, 6, 8],
  [1, 7]
]

visited = [False] * 9 # 각 노드의 방문 정보

bfs(graph, 1, visited) # 1 2 3 8 7 4 5 6

